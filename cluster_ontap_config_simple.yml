---
- hosts: localhost
  name: 'ONTAP Cluster Config: {{ cluster }}'
  gather_facts: no
  vars:
    state: present
    login: &login
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
  # vars_prompt:  # For NetApp Admin Credentials
  #   - name: netapp_username
  #     prompt: NetApp 'admin'
  #   - name: netapp_password
  #     prompt: NetApp 'admin' password
  #     secret: true
  vars_files:
  - vars/vars_ontap_config_simple.yml
  collections:
  - netapp.ontap

  tasks:

  ###
  # Network: Broadcast-domain split
  ###

  - name: Manage Active Ansible MGMT network interface
    na_ontap_broadcast_domain:
      state: present
      <<: *login
      from_name: "{{ item.origin_bd }}"
      name: "{{ item.new_bd }}"
      mtu: '1500'
      ipspace: Default
      ports: "{{ item.ports }}"
    loop: "{{ bcd_split_ports }}"

  ###
  # Role: Cluster Configuration
  # Note:
  ###

  - include_role:
      name: na_ontap_cluster_config

  ###
  # Role: Vserver Configuration
  # Note:
  ###

  - include_role:
      name: na_ontap_vserver_create

  ###
  # Non-Role: Standard Configuration
  # Note:
  ###

  ###
  # timezone
  ###

  - name: 'Set cluster timezone {{ tzone }}'
    na_ontap_command:
      <<: *login

      command:        [ 'cluster', 'date', 'modify',
                        '-timezone', "{{ tzone }}" ]

  ###
  # Enable discovery tools for Config Advisor
  ###

  # Configure cdpd
  - name: 'Enable CDP'
    na_ontap_command:
      <<: *login
      privilege: 'advanced'

      command:        [ 'system', 'node', 'run',
                        '-node', '*', 'options', 'cdpd.enable', 'enable' ]

  # Configure lldp
  - name: 'Enable LLDP'
    na_ontap_command:
      <<: *login
      privilege: 'advanced'

      command:        [ 'system', 'node', 'run',
                        '-node', '*', 'options', 'lldp.enable', 'enable' ]

  ###
  # Set System SNMP Location value
  ###

  - name: 'Set cluster SNMP Location'
    na_ontap_command:
      <<: *login
      privilege: 'advanced'

      command:        [ 'system', 'snmp', 'location',
                        '-location', "{{ cluster_loc }}" ]
    when: cluster_loc is defined and cluster_loc != None

  ###
  # Autosupport: Configuration
  ###

  - name: Enable Autosupport Configuration
    na_ontap_autosupport:
      state: present
      node_name: "{{ item.node }}"
      proxy_url: "{{ item.proxy_url }}"
      transport: "{{ item.transport }}"
      hostname_in_subject: "{{ item.hostsubj | default('false') }}"
      from_address: "{{ item.from }}"
      noteto: "{{ item.noteto }}"
      to_addresses: "{{ item.to }}"
      partner_addresses: "{{ item.partner | default(omit) }}"
      mail_hosts: "{{ item.mailhosts }}"
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: "{{ validate_certs }}"

    with_items: "{{ asup_config }}"
    when: asup_config is defined and asup_config != None

  ###
  # Export-Policies: Create and Manage
  # Note: Comment this out if not needed
  ###

  - name: 'Remove default Export-policy entry: RO = ALL'
    na_ontap_export_policy_rule:
      state: absent
      policy_name: default
      vserver: "{{ svm }}"
      rule_index: "{{ item.rule_index | default(1) }}"
      <<: *login

  - name: Create SVM Export-policy
    na_ontap_export_policy:
      state: "{{ state }}"
      name: "{{ item.name }}"
      vserver: "{{ item.svm }}"
      <<: *login
    loop: "{{ svm_export_policy_name }}"

  - name: Setup "Default" and SVM Export-policies
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: "{{ item.name }}"
      vserver: "{{ item.svm }}"
      client_match: "{{ item.client_match }}"
      protocol: "{{ item.protocol }}"
      ro_rule: "{{ item.ro_rule }}"
      rw_rule: "{{ item.rw_rule }}"
      rule_index: "{{ item.rule_index | default(omit)}}"
      super_user_security: "{{ item.super_user_security }}"
      <<: *login
    loop: "{{ export_policy_rules_list }}"
