---
- hosts: localhost
  collections:
  - netapp.ontap
  gather_facts: no
  name: SnapMirror Configuration for existing volume
  vars:
    input: &login
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
    state:        present
    vserver:      ansible_vserver
    comment: 
    common_snapshot_schedule:  
    ignore_atime: false
    is_network_compression_enabled: false
    owner:        cluster_admin
    policy_name: "ansible_policy"
    policy_type: "mirror_vault"
    snapmirror_label: ['daily', 'weekly', 'monthly']
    keep:         [7, 5, 12]
    restart:      false
    schedule:     ['','weekly','monthly']
    prefix:       ['','','monthly_mv']
    transfer_priority: low
    tries: 

  tasks:

# SnapMirror Configuration

  - name: Create SnapMirror policy with rules and schedules (no schedule for daily rule)
    na_ontap_snapmirror_policy:
      <<: *login

      state:                          "{{ state }}"
      vserver:                        "{{ vserver }}"

      comment:                        "{{ comment | default(omit) }}"
      common_snapshot_schedule:       "{{ common_snapshot_schedule | default(omit) }}" 
      ignore_atime:                   "{{ ignore_atime | default(false) }}"
      is_network_compression_enabled: "{{ is_network_compression_enabled  | default(false) }}"
      keep:                           "{{ keep | default(omit) }}"
      owner:                          "{{ owner | default('cluster') }}"
      policy_name:                    "{{ policy_name }}"
      policy_type:                    "{{ policy_type | default(omit) }}"
      prefix:                         "{{ prefix | default(omit) }}"
      restart:                        "{{ restart | default(omit) }}"
      schedule:                       "{{ schedule | default(omit) }}"
      snapmirror_label:               "{{ snapmirror_label | default(omit) }}"
      transfer_priority:              "{{ transfer_priority | default('low') }}"
      tries:                          "{{ tries | default(omit) }}"